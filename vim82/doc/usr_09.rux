*usr_09.txt*	       для Vim version 8.2	      редакция от 11 авг 2017

		  РУКОВОДСТВО ПОЛЬЗОВАТЕЛЯ ПО РЕДАКТОРУ VIM
			      автор Брам Моленар

		    Графический интерфейс программы


Редактор Vim запускаемый командой vim работает в обычном текстовом терминале,
а запускаемый командой gvim работает точно так же, но в графической среде,
позволяющей использовать несколько дополнительных возможностей. Графический
интерфейс пользователя (ГИП) предоставляет такие элементы управления как меню,
панель инструментов, полосы прокрутки и другие функциональные возможности, и о
всём этом рассказывается в этой главе.

|09.1|  Элементы графического интерфейса
|09.2|  Использование «мыши»
|09.3|  Системный буфер обмена
|09.4|  Режим выборки текста

  Следующая глава: |usr_10.txt|  Расширенные приёмы правки текста
 Предыдущая глава: |usr_08.txt|  Работа с окнами
       Содержание: |usr_toc.txt|

==============================================================================
*09.1*  Элементы графического интерфейса

Для запуска редактора Vim с графическим интерфейсом, также называемом GVim,
можно пользоваться ярлыком на рабочем столе или одной из следующих команд:

>
	gvim file.txt
	vim -g file.txt
<

Если эти команды не работают, то, значит, данная версия программы Vim собрана
без поддержки графического интерфейса.
    При выполнении одной из вышеуказанных команд будет открыто окно редактора
Vim и в нём отображено содержимое файла «file.txt». Как выглядит это окно
зависит от версии редактора, но в общем случае это напоминает, насколько это
возможно передать при помощи символов ASCII, следующую иллюстрацию:

+----------------------------------------------------------+
| file.txt + (~/dir) - GVIM                               X|<- заголовок окна
+----------------------------------------------------------+
| Файл  Правка Сервис Синтаксис Буферы Окно Справка        |<- меню
+----------------------------------------------------------+
| шшш  шшш  шшш  шшш  шшш  шшш  шшш  шшш  шшш  шшш  шшш    |<- панель
| шшш  шшш  шшш  шшш  шшш  шшш  шшш  шшш  шшш  шшш  шшш    |   инструментов
+----------------------------------------------------------+
| текст файла                                          | ^ |
| ~                                                    | # |
| ~                                                    | # |<- полоса
| ~                                                    | # |   прокрутки
| ~                                                    | # |
| ~                                                    | # |
|                                                      | V |
+----------------------------------------------------------+

Самую большую область занимает текст файла, и он отображается в окне так же,
как и в терминале, но возможно другими цветами и шрифтом.


ЗАГОЛОВОК ОКНА

В самом верху окна находится заголовок. Заголовок рисуется системой, но
из редактора Vim передаётся системе информация о том, что там необходимо
отобразить название текущего файла, затем некий специальный символ и далее
наименование каталога, в котором находится файл. Этот специальный символ может
быть одним из следующих:

	-	файл не может быть изменён (например, файл справки);
	+	файл был изменён;
	=	файл открыт только для чтения;
	=+	файл открыт только для чтения, но был изменён.

Если специальный символ не отображается, то в окне открыт обычный файл,
который в текущем сеансе работы ещё не редактировался.


ПАНЕЛЬ МЕНЮ

Вы, конечно же, знаете, как работает меню. Меню в графической версии редактора
Vim содержит как стандартные, так и несколько дополнительных пунктов меню.
Просмотрите пункты меню, чтобы получить представление о том, что и где
находится. Например, подменю Общие параметры меню Правка, где среди всего
прочего есть такие пункты, посредством которых можно управлять внешним видом
программы:

	Панель инструментов     Включить или отключить отображение панели
				инструментов.
	Полоса прокрутки внизу  Включить или отключить отображение полосы
				прокрутки внизу окна.
	Полоса прокрутки слева  Включить или отключить отображение полосы
				прокрутки в левой части окна.
	Полоса прокрутки справа Включить или отключить отображение полосы
				прокрутки в правой части окна.

На многих системах меню сделаны отрывными. Выберите верхний пункт меню,
который выглядит как пунктирная линия, и будет отображено отдельное окно со
всеми пунктами этого меню. Это окно будет оставаться на экране до тех пор,
пока не будет закрыто.


ПАНЕЛЬ ИНСТРУМЕНТОВ

Эта панель содержит значки для наиболее часто используемых действий. Надеемся,
что эти значки говорят сами за себя. Кроме того, можно получить подсказку о
действии значка панели инструментов, если подвести к нему указатель «мыши».

Как уже говорилось, пункт Панель инструментов подменю Общие параметры меню
Правка управляет отображением панели инструментов. Если требуется вообще
отключить отображение панели инструментов, то поместите в файл vimrc такую
команду

>
	:set guioptions-=T
<

чтобы сбросить флаг 'T' у параметра 'guioptions'. Через данный параметр можно
включать и отключать также и другие элементы интерфейса, подробности см. в
справке по этому параметру.


ПОЛОСЫ ПРОКРУТКИ

По умолчанию в окне отображается только одна полоса прокрутки — справа. Полоса
прокрутки работает так, как это и ожидается. Если будет создано ещё одно окно,
то каждое окно получает по собственной полосе прокрутки. Горизонтальную полосу
прокрутки можно включить через пункт Полоса прокрутки внизу подменю Общие
параметры меню Правка. Полоса прокрутки внизу окна удобна в режиме просмотра
различий, а также в тех случаях, когда параметр 'wrap' выключен (подробнее об
этом позже).

При вертикальном расположении окон, очевидно, что только у окон в правой части
рабочей области редактора Vim есть полоса прокрутки. Однако при перемещении
каретки в окно расположенное в левой части, полоса прокрутки будет
использоваться для активного окна, то есть окна, расположенного в левой части
рабочей области. Возможно, потребуется некоторое время, чтобы привыкнуть к
этому. При работе с вертикальным расположением окон может быть уставлена
полоса прокрутки и с левой стороны окна. Для этого используется или
соответствующий пункт подменю Общие параметры меню Правка, или установка
следующего флага параметра 'guioptions':

>
	:set guioptions+=l
<

Эта команда добавляет флаг 'l' к заначению параметар 'guioptions'.

==============================================================================
*09.2*  Использование «мыши»

Стандарты — замечательная вещь. В Microsoft Windows есть стандартный способ,
чтобы выделять «мышью» текст, и в X Window также имеется стандартный способ
использования «мыши» для этой цели. Но, к сожалению, эти стандарты не
соответствуют друг другу. Хорошая новость в том, что можно настраивать
программу Vim по своему усмотрению. Манипулятор «мышь» может работать в
редакторе так, как принято в X Window или как принято в Microsoft Windows. Для
этого просто надо воспользоваться командой

>
	:behave xterm
<
или
>
	:behave mswin
<

соответственно. В UNIX-подобных системах по умолчанию поведение «мыши» —
xterm. В Microsoft Windows поведение «мыши» по умолчанию выбирается в процессе
установки программы. Подробности можно прочитать в описании |:behave|, а здесь
будет приведена самая общая информация:

ПОВЕДЕНИЕ «МЫШИ» ПРИ ЗНАЧЕНИИ XTERM

Нажатие левой кнопки		позиционирование каретки.
Протяжка с удержанием
левой кнопки			выделение текста в визуальном режиме.
Нажатие средней кнопки		вставка текста из системного буфера.
Нажатие правой кнопки		расширение выделения до текущего положения
				указателя «мыши».

ПОВЕДЕНИЕ «МЫШИ» ПРИ ЗНАЧЕНИИ MSWIN

Нажатие левой кнопки		позиционирование каретки.
Протяжка с удержанием
левой кнопки			выделение текста в режиме выборки (см. |09.4|).
Нажатие левой кнопки с
нажатым SHIFT			расширение выделения до текущего положения
				указателя «мыши».
Нажатие средней кнопки		вставка текста из системного буфера.
Нажатие правой кнопки		отображение всплывающего контекстного меню.

Но это ещё не всё! Посмотрите нижеперечисленные параметры, чтобы узнать, как
можно более точно настроить работу «мыши»:

	'mouse'			указание режимов редактора Vim, в которых
				используется «мышь»;
	'mousemodel'		настройка действий при нажатии кнопок «мыши»;
	'mousetime'		время между двумя щелчками кнопки «мыши»,
				чтобы считать их как один двойной щелчок;
	'mousehide'		скрывать указатель «мыши» во время набора
				текста;
	'selectmode'		режим (визуальный или выборки), в который при
				нажатии кнопки «мышь» переключается редактор.

==============================================================================
*09.3*  Системный буфер обмена

В параграфе |04.7| мы объяснили общие принципы использования системного буфера
обмена. Следует пояснить одну деталь относительно X Window: в этой системе на
самом деле есть два места, в которых можно хранить текст для передачи между
программами, в отличие от MS Windows в которой есть только один системный
буфер обмена.

В X Window имеется так называемое «текущее выделение». Это текст, который
выделен в данный момент. В редакторе Vim это выделенная область в визуальном
режиме, если используются настройки по умолчанию. Содержимое выделенной
области можно вставить в другом приложении без дополнительных манипуляций.
    Например, выделите «мышью» несколько предложений в этом тексте. Теперь
запустите ещё один экземпляр программы gvim, без аргументов, и щёлкните
средней кнопкой «мыши» в пустом окне — будет вставлен выделенный текст.

Текущее выделение будет оставаться в силе только до тех пор, пока не будет
выбран какой-нибудь иной текст. В программе GVim, где только что вставили
текст, выделите несколько символов и увидите, что текст, который был выделен
первоначально, выглядят иначе. Это происходит потому, что он больше не
являются «текущим выделением».

Вообще-то, не требуется обязательно пользоваться «мышью» для выделения текста,
клавиатурные команды для визуального режима вполне справляются с этой задачей.


НАСТОЯЩИЙ БУФЕР ОБМЕНА

Теперь о другом способе передачи текста между программами. Чтобы избежать
недоразумения, мы будем называть его «настоящий буфер обмена». Необходимо
учитывать, что буфером обмена часто называют, как «текущее выделение», так и
«настоящий буфер обмена».
    Чтобы поместить текст в настоящий буфер обмена, выберите несколько
различных участков текста в одном из работающем экземпляре редактора и
воспользуйтесь пунктом Копировать меню Правка. Теперь текст помещён в
настоящий буфер обмена. Некоторые приложения могут показывать содержимое
буфера обмена, например, KDE klipper.
    Перейдите в другой работающий редактор GVim, установите каретку где-нибудь
в рабочей области и воспользуйтесь пунктом Вставить меню Правка. Теперь в окне
появился текст из настоящего буфера обмена.


ИСПОЛЬЗОВАНИЕ ОБЕИХ ВОЗМОЖНОСТЕЙ

Использование «текущего выделения» и «настоящего буфера обмена» вместе может
показаться немного сбивающим с толку, но в действительности это весьма удобно.
Продемонстрируем на примере. В одном из редакторов GVim с загруженным
текстовым файлом проделайте следующие операции:

- выберите два слова в визуальном режиме;
- поместите эти два слова в буфер обмена при помощи пункта Копировать меню
  Правка;
- выберите в визуальном режиме ещё какое-нибудь слово;
- воспользуйтесь пунктом Вставить меню Правка. Выбранное слово было заменено
  на два слова из буфера обмена;
- переместите каретку куда-нибудь в другое место и нажмите на среднюю кнопку
  «мыши», и слово, которое только что было заменено на два других слова из
  буфера обмена, теперь будет вставлено на новое место.

Если пользоваться «текущим выделением» и «настоящим буфером обмена» осторожно,
то можно успешно применять эту возможность при редактировании.


ИСПОЛЬЗОВАНИЕ КЛАВИАТУРЫ

Если не нравится пользоваться «мышью», то доступ к «текущему выделению» и
«настоящему буферу обмена» можно получить с клавиатуры при помощи двух
регистров редактора Vim. Регистр "* используется для «текущего выделения».
    Чтобы фрагмент текста стал «текущим выделением», используйте визуальный
режим. Например, чтобы выбрать целую строку, нажмите клавишу `V` (прописная
латинская буква V).
    Чтобы вставить отмеченную строку перед кареткой введите

>
	"*P
<

Обратите внимание на используемую команду — это прописная буква «P». По команде
с использованием строчной буквы «p» текст будет вставлен после каретки.

Регистр "+ используется для «настоящего буфера обмена». Например, скопировать
текст от позиции каретки до конца строки в «настоящий буфер обмена» можно при
помощи команды

>
	"+y$
<

Вспомните, что `y` это команда редактора Vim для копирования. Для вставки
содержимого «настоящего буфера обмена» перед кареткой

>
	"+P
<

Как видите, команды те же самые, что и для «текущего выделения», но вместо
регистра "* (звёздочка) используется регистр "+ (плюс).

==============================================================================
*09.4*  Режим выборки текста

О визуальном режиме мы уже рассказывали, и, в дополнении к нему, расскажем о
том, что чаще используется в MS Windows, нежели в X Window, хотя это можно
применять в обеих системах. Режим выборки текста очень похож на визуальный
режим, поскольку также используется для выделения текста. Вместе с тем, есть
очевидное отличие — при наборе текста, весь выделенный текст удаляется и
заменяется набираемым текстом.

Для того чтобы была возможность переключать редактор в режим выборки текста,
необходимо его разрешить (в MS Windows он, скорее всего уже активирован, но
хуже от того, что включим его ещё раз, не будет)

>
	:set selectmode+=mouse
<

Теперь можно использовать «мышь» для выделения текста и текст будет
подсвечиваеться точно так же, как и в визуальном режиме. Нажмите какую-нибудь
клавишу на клавиатуре — выделенный текст будет удалён и вместо него появится
введённый символ, а редактор автоматически переключится в режим вставки, так
что можно продолжить набор.

Поскольку ввод любого текста удаляет выделенный текст, то использовать обычные
команды перемещения каретки, такие как "hjkl", `w`, и т. п., не представляется
возможным. Вместо этого используйте клавиши перемещения курсора при нажатой
клавише <SHIFT>, так, по <SHIFT-LEFT> каретка будет перемещена влево. Другие
клавиши перемещения курсора в комбинации с клавишей <SHIFT> работают так же,
как ожидается, включая комбинации <SHIFT-END> и <SHIFT-HOME>.

Настроить режим выборки текста можно при помощи параметра 'selectmode'.

==============================================================================

Следующая глава: |usr_10.txt|  Расширенные приёмы правки текстов
Авторские права: см. |авторские_права_на_документацию|

vim:tw=78:ts=8:noet:ft=help:norl:
