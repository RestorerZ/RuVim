*usr_06.txt*	       для Vim version 9.0	      редакция от 01 июня 2019

		  РУКОВОДСТВО ПОЛЬЗОВАТЕЛЯ ПО РЕДАКТОРУ VIM
			      автор Брам Моленар

		      Цветная подсветка текста


Чёрно-белый текст это скучно, а цвет привносит жизнь. Цветной текст не только
выглядит красиво, но и помогает быстрее работать. В редакторе Vim имеется
возможность отображать различные участки текста разными цветами, и, к тому же,
можно распечатать текст с теми же цветами, с которыми он показан на экране.

|06.1|  Активация цветной подсветки
|06.2|  Отсутствие или неправильное отображение цвета
|06.3|  Изменение цветовой схемы
|06.4|  Включение и отключение цветной подсветки
|06.5|  Цветная печать
|06.6|  Дополнительные материалы

  Следующая глава: |usr_07.txt|  Редактирование сразу нескольких файлов
 Предыдущая глава: |usr_05.txt|  Настройка программы
       Содержание: |usr_toc.txt|

==============================================================================
*06.1*  Активация цветной подсветки

Всё волшебство начинается с одной простой команды

>
	:syntax enable
<

В большинстве ситуаций этого должно быть достаточно для того, чтобы в
редактируемом файле появилась цветовая подсветка синтаксиса. В редакторе Vim
выполняется автоматическое распознавание типа файла и, в зависимости от
результата, подключаются соответствующие правила подсветки. Комментарии будут
окрашены в синий цвет, ключевые слова — коричневым, а строки красным цветом,
что делает просмотр содержимого файла простым и приятным занятием. Спустя
некоторое время станет понятно, как сложно было разбираться в чёрно-белом
тексте!

Если хотите всегда использовать подсветку синтаксиса, то добавьте команду
":syntax enable" в файл |vimrc|.

Если нужно, чтобы подсветка синтаксиса работала только с терминалами, которые
поддерживают цвет, то можете поместить в файл |vimrc| следующий код:

>
	if &t_Co > 1 syntax enable endif
<

Если же нужно, чтобы подсветка синтаксиса работала только в версии с
графическим интерфейсом, то впишите команду ":syntax enable" в файл |gvimrc|.

==============================================================================
*06.2*  Отсутствие или неправильное отображение цвета

Возможно несколько причин, по которым могут не отображаться цвета на экране:

- Терминал не поддерживает цвета.
    В этом случае в редакторе Vim вместо цветной подсветки будет
    использоваться выделение текста полужирным, наклонным и подчёркнутым
    начертанием шрифта, но это будет выглядеть не самым лучшим образом.
    Возможно, стоит попытаться установить терминал с поддержкой цветов. Для
    UNIX‐подобных систем мы рекомендуем xterm из XFree86: |xfree-xterm|. 

- Терминал способен отображать цвет, но это не распознаётся программой Vim.
    Убедитесь, что настройка переменной $TERM является правильной. Например,
    для использования xterm с поддержкой цветности

>
	setenv TERM xterm-color
<

или (в зависимости от используемой командной оболочки)

>
	TERM=xterm-color; export TERM
<

Наименование терминала должно соответствовать используемому терминалу. Если
при этом отображение цветов всё равно не работает, прочитайте параграф
|xterm-color|, где объясняется несколько способов настройки редактора Vim для
показа цветов (и не только для xterm).

- Не распознаётся тип файла.
    В редакторе Vim не удалось бы реализовать распознавание всех существующих
    типов файлов, и подчас бывает почти невозможно определить, какой язык
    программирования используется в файле. Попробуйте ввести такую команду

>
	:set filetype
<

Если результатом окажется «filetype=», то проблема действительно в том, что
редактору Vim не удалось определить, к какому типу относится файл. В этом
случае можно установить тип файла вручную

>
	:set filetype=fortran
<

Чтобы посмотреть, какие типы файлов доступны, загляните в каталог
$VIMRUNTIME/syntax. Если используется графический интерфейс, то можно
воспользоваться меню Синтаксис. Установить тип файла также можно при помощи
|режимной_строки|, чтобы файл правильно определялся всякий раз, когда он будет
редактироваться. Например, в Makefile можно использовать такую строку (её
следует поместить в начальной или конечной части файла)

>
	# vim: syntax=make
<

Часто для определения типа файла используется его расширение. См. также
параграф |новый_тип_файла|, где рассказывается о том, как подсказать редактору
Vim какой тип файла использовать.

- Отсутствуют правила подсветки синтаксиса для данного типа файла.
    Можно попытаться использовать похожий тип файла, установив его вручную,
    как описано выше. Если этого недостаточно, то можно написать собственные
    правила подсветки для файлов такого типа, см. |свой_файл_синтаксиса|.

Цвета также могут отображаться неправильно:

- Цветной текст слишком трудно читать.
    В редакторе Vim реализовано распознавание цвета используемого в качестве
    фона. Если это чёрный, или другой тёмный тон цвета, то в программе будут
    использоваться светлые тона цвета для текста. Если же это белый, или
    другой светлый тон цвета, то для текста будут использоваться тёмные тона
    цвета. В том случае, если в редакторе Vim неправильно распознаётся цвет
    фона, текст будет сложно читать. Для решения этой задачи можно
    использовать параметр 'background'. Для тёмного фона

>
	:set background=dark
<

Для светлого фона

>
	:set background=light
<

Убедитесь, что эта команда указана _до_ команды `:syntax enable`, иначе цвета
будут уже назначены. После установки 'background' можно использовать команду
`:syntax reset`, чтобы в редакторе Vim были восстановлены цвета по умолчанию.

- Цвета нарушаются при прокрутке снизу вверх.
    Редактором Vim не считывается весь файл целиком, когда выполняется анализ
    текста. Вместо этого, производится разбор только того фрагмента, который
    отображается на экране, что позволяет работать намного быстрее, но при
    этом цвета могут нарушаться. Простой способ поправить положение — обновить
    экран по команде CTRL-L, или выполнить прокрутку текста немного назад и
    снова вперёд. Для полного решения задачи обратитесь к параграфу
    |:syn-sync|. Некоторые правила синтаксиса позволяют заглядывать назад в
    тексте, смотрите файл справки для соответствующего файла с правилами
    подсветки. Например, для синтаксиса TeX см. |tex.vim|.

==============================================================================
*06.3*  Изменение цветовой схемы
							*:syn-default-override*
					*переопределение_цветов_по_умолчанию*

Если не устраивают цвета по умолчанию, то можно выбрать другую цветовую схему.
В графическом интерфейсе это можно сделать через пункт Цветовая схема меню
Правка. Кроме того, можно ввести команду

>
	:colorscheme evening
<

«evening» (вечер) это название цветовой схемы. Вместе с редактором Vim
поставляется несколько цветовых схем, которые можно попробовать. Загляните в
каталог $VIMRUNTIME/colors.

Если понравится какая-нибудь схема, то не забудьте добавить соответствующую
команду ":colorscheme" в файл |vimrc|.

К тому же, можно написать собственную цветовую схему. Вот как это делается:

1. Выберите подходящую цветовую схему, которая напоминает то, что должно
   получиться. Скопируйте её из подкаталога редактора Vim в домашний каталог.
   Например, в UNIX-подобных системах

>
	!mkdir ~/.vim/colors
	!cp $VIMRUNTIME/colors/morning.vim ~/.vim/colors/mine.vim
<

Это нужно делать из редактора Vim, поскольку только в нём определено значение
переменной $VIMRUNTIME.

2. Отредактируйте файл цветовой схемы. Вот полезные переменные:

	term		возможные свойства ч/б терминала;
	cterm		возможные свойства цветного терминала;
	ctermfg		цвет текста в цветном терминале;
	ctermbg		цвет фона в цветном терминале;
	gui		возможные свойства для графического интерфейса;
	guifg		цвет текста в графическом интерфейсе;
	guibg		цвет фона в графическом интерфейсе.

Например, следующая команда в файле цветовой схемы задаёт для комментариев
зелёный цвет

>
	:highlight Comment ctermfg=green guifg=green
<

Свойства, которые можно указывать для "cterm" и "gui" это «bold» и «underline»
(полужирное и подчёркнутое начертание). Если хотите использовать оба значения,
то пишете «bold,underline». Подробнее в описании команды |:highlight|.

3. Укажите редактору Vim всегда использовать созданную цветовую схему. Для
   этого поместите в |vimrc| строку

>
	colorscheme mine
<

Если хотите посмотреть, как выглядят часто употребляемые цветовые комбинации,
то используйте команды

>
	:runtime syntax/colortest.vim
<

Будет показан текст в различных цветовых комбинациях, из которых можно выбрать
самые удобочитаемые и приятные.

==============================================================================
*06.4*  Включение и отключение цветной подсветки

Цветная подсветка текста может требовать значительное количество ресурсов.
Если покажется, что редактор работает слишком медленно, то можно на время
отключить подсветку командой

>
	:syntax clear
<

При редактировании следующего файла подсветка будет восстановлена.

Если хотите полностью выключить подсветку синтаксиса, то используйте команду

>
	:syntax off
<

Это позволит полностью отключить подсветку синтаксиса сразу для всех буферов.
Подробнее см. |syntax-off|.

								*:syn-manual*
Если хотите, чтобы подсветка синтаксиса работала только для определённых
файлов, то используйте ручное управление подсветкой посредством команды

>
	:syntax manual
<

Эта команда разрешает подсветку синтаксиса, но не включает её немедленно при
редактировании буфера. Вместо этого потребуется дополнительно установить
параметр 'syntax' для каждого буфера, где необходима подсветка синтаксиса

>
	:set syntax=ON
<

==============================================================================
*06.5*  Цветная печать
					    *syntax-printing*  *печать_в_цвете*

В версии для MS Windows текущий файл можно распечатать по команде

>
	:hardcopy
<

После ввода данной команды будет отображён привычный системный диалог печати,
где можно выбрать принтер и сделать необходимые настройки. Если используется
цветной принтер, то вывод на бумаге должен выглядеть примерно так же, как и
то, что отображается на экране в редакторе Vim. Стоит учесть, что если в
редакторе Vim используется тёмный фон, то цвета будут скорректированы, чтобы
быть удобочитаемыми на белой бумаге.

Следующие параметры влияют на результат печати из редактора Vim:
	'printdevice'
	'printheader'
	'printfont'
	'printoptions'

Чтобы напечатать только определённый диапазон строк, выделите требуемые строки
в визуальном режиме и наберите команду ":hardcopy". Например,

>
	v100j:hardcopy
<

где по команде `v` выполняется переключение редактора в визуальный режим, по
команде "100j" помечается 100 строк вниз от текущего положения каретки, по
команде ":hardcopy" отправляются выделенные строки на печать. Конечно, для
перемещения в визуальном режиме можно использовать и другие команды.

Если имеется PostScript принтер, то это так же будет работать и в
UNIX-подобных системах. В противном случае потребуется проделать немного
дополнительной работы — преобразовать сначала текст в HTML и затем напечатать
его из веб-браузера.

Конвертировать текущий файл в HTML-формат можно по команде

>
	:TOhtml
<

Если это не сработает, то введите такую команду

>
	:source $VIMRUNTIME/syntax/2html.vim
<

На преобразование потребуется некоторое время, после чего в редакторе Vim
будет открыто новое окно с кодом HTML. Сохраните этот документ в файл,
например,

>
	:write main.c.html
<

Теперь откройте этот файл в браузере, который предпочитаете использовать, и
распечатайте файл. Если всё прошло успешно, то бумажная копия должна выглядеть
так же, как и в самом редакторе. Подробности см. в |2html.vim|. Не забудьте
удалить файл HTML, когда он больше не будет нужен.

Вместо печати, файл HTML можно разместить на веб-сервер, чтобы другие могли
просматривать цветной текст.

==============================================================================
*06.6* Дополнительные материалы

|usr_44.txt|  Собственные правила подсветки синтаксиса.
|синтаксис|   Подробности о правилах подсветки синтаксиса.

==============================================================================

Следующая глава: |usr_07.txt|  Редактирование сразу нескольких файлов
Авторские права: см. |авторские_права_на_документацию|
Перевод на русский язык: © Restorer, 2017—2022, restorer@mail2k.ru

vim:tw=78:ts=8:noet:ft=help:norl:
